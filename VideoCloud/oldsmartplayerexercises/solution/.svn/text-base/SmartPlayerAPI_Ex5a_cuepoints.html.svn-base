	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
	<head>
		<title>Player API Exercise 4</title>
		<style type="text/css">
			body {font-family : Helvetica,Arial,sans-serif; color : #619FA8;}
			legend {
				color: #CF0050;
			}
		</style>
	</head>
	<body>
		<h1>Smart Player API Training</h1>
		<p>The buttons below are for development purposes only, to switch between Flash and  HTML5 players. Do not use these in production, as the method is unsupported. You should let the Smart Player decide whether to load Flash or HTML5 instead.</p>
		<div id="modeSwitch">
			<button onclick="BCL.switchToHTML5()" style="margin-bottom: 20px;margin-right: 10px;">Switch to HTML5 Player</button>
			<button onclick="BCL.switchToFlash()" style="margin-bottom: 20px;">Switch to Flash Player</button>
		</div>
		<!-- Start of Brightcove Player -->

		<div style="display:none">
		
		</div>
		
		<!--
		By use of this code snippet, I agree to the Brightcove Publisher T and C 
		found at https://accounts.brightcove.com/en/terms-and-conditions/. 
		-->
		
		<script language="JavaScript" type="text/javascript" src="http://admin.brightcove.com/js/BrightcoveExperiences.js"></script>
		
		<object id="myExperience" class="BrightcoveExperience">
		  <param name="bgcolor" value="#FFFFFF" />
		  <param name="width" value="480" />
		  <param name="height" value="270" />
		  <param name="playerID" value="1146049103001" />
		  <param name="playerKey" value="AQ~~,AAAA1oy1bvE~,ALl2ezBj3WEd1K9zn5lA_OOffNUFbVae" />
		  <param name="isVid" value="true" />
		  <param name="isUI" value="true" />
		  <param name="dynamicStreaming" value="true" />
		  <param name="@videoPlayer" value="1187529587001" />
		  <!-- params for Smart Player API -->
		  <param name="includeAPI" value="true" />
		  <param name="templateReadyHandler" value="BCL.onTemplateReady" />
		</object>
		
		<script type="text/javascript">brightcove.createExperiences();</script>
		
		<!-- End of Brightcove Player -->
		<script type="text/javascript">
			// namespace for everything global
			var BCL = {};
			// event listener for the player being ready
			BCL.onTemplateReady = function(event) {
			  console.log("BCL.onTemplateReady");
			  BCL.player = brightcove.api.getExperience("myExperience");
				BCL.videoPlayer = BCL.player.getModule(brightcove.api.modules.APIModules.VIDEO_PLAYER);
			  // capture the original video id 
			  BCL.videoPlayer.getCurrentVideo( function(videoDTO) {
				  	BCL.originalID = videoDTO.id;
				  } );
			  // get a reference to the cue points module and set a listener
			  BCL.cuePointsModule = BCL.player.getModule(brightcove.api.modules.APIModules.CUE_POINTS);
			  BCL.cuePointsModule.addEventListener(brightcove.api.events.CuePointEvent.CUE, BCL.onCuePoint);
			 } 

			// Cue points handler
			BCL.onCuePoint = function(event) {
				console.log("cue point");
				var bumper = {};
				// remove the listener so that we don't catch the event again when we restart the video
				BCL.cuePointsModule.removeEventListener(brightcove.api.events.CuePointEvent.CUE, BCL.onCuePoint);
				// pause the main video
				BCL.videoPlayer.pause(true);
				// save the restart position - add .1 seconds to make sure we don't trip on the cue point again when we restart the main video
				BCL.restartPoint = event.cuePoint.time + .1;
				// the "bumper" video id is stored in a JSON string in the cue point metadata -- you can also store it elsewhere
				bumper = JSON.parse(event.cuePoint.metadata);
				console.log(bumper);
				BCL.playBumper(bumper.bumperID);
			}
			// play the "bumper"
			BCL.playBumper = function(videoID) {
				console.log("starting the bumper");
				// add listener for bumper complete
				BCL.videoPlayer.addEventListener(brightcove.api.events.MediaEvent.COMPLETE, BCL.onBumperComplete);
				// play the "bumper"
				BCL.videoPlayer.loadVideoByID(videoID);
			}
			// bumper complete handler
			BCL.onBumperComplete = function(event) {
				console.log("Bumper Complete");
				// remove the event listener because we don't want this handler executed when the main video completes
				BCL.videoPlayer.removeEventListener(brightcove.api.events.MediaEvent.COMPLETE, BCL.onBumperComplete);
				BCL.videoPlayer.loadVideoByID(BCL.originalID);
				BCL.videoPlaying();
			}
			
			BCL.videoPlaying = function () {
				console.log("check playing");
				BCL.videoPlayer.getIsPlaying(function(data) {
					if (data == true) {
						console.log(data);
						BCL.videoPlayer.seek(BCL.restartPoint);
						// add a listener for main video complete to reset
						BCL.videoPlayer.addEventListener(brightcove.api.events.MediaEvent.COMPLETE, BCL.onMainComplete);
					}
					else {
						// function recalls itself till result is true
						BCL.videoPlaying();
					}
				});
			}
			// handler for main video complete
			BCL.onMainComplete = function(event) {
				console.log("main complete");
				// remove this listener
				BCL.videoPlayer.removeEventListener(brightcove.api.events.MediaEvent.COMPLETE, BCL.onMainComplete);
				// reset the cue points listener for replay or new videos
				BCL.cuePointsModule.addEventListener(brightcove.api.events.CuePointEvent.CUE, BCL.onCuePoint);
			}
			// for development purposes only: reopen page with HTML5 player
			BCL.switchToHTML5 = function() {
				var separator = "?";
				if (document.location.href.indexOf("?", 0) > -1) {
					separator = "&";
				}
				window.location = document.location.href + separator + "forceHTML=true";
			};
			// for development purposes only: switch back to Flash
			BCL.switchToFlash = function() {
				var startOfQuery = document.location.href.indexOf("forceHTML", 0) -1;
				window.location = document.location.href.substring(0, startOfQuery);
			};
		</script>

	</body>
</html>
