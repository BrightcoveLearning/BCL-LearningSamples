[
    {
        "comment": "/**\n * Base class for all buttons\n * @param {Player|Object} player\n * @param {Object=} options\n * @extends Component\n * @class Button\n */",
        "meta": {
            "range": [
                0,
                137
            ],
            "filename": "button.js",
            "lineno": 1,
            "path": "/Users/mboles/git/BCL-LearningSamples/jsdoc-tests2",
            "code": {}
        },
        "description": "<p>Base class for all buttons</p>",
        "params": [
            {
                "type": {
                    "names": [
                        "Player",
                        "Object"
                    ]
                },
                "name": "player"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "name": "options"
            }
        ],
        "augments": [
            "Component"
        ],
        "kind": "class",
        "name": "Button",
        "longname": "Button",
        "scope": "global"
    },
    {
        "comment": "/**\n  * Create the component's DOM element\n  *\n  *     //This is test code\n  *     var myPlayer = this;\n  *\n  * @param {String=} type - Element's node type. e.g. 'div'\n  * @param {Object=} props - An object of element attributes that should be set on the element Tag name \n  * @returns HTML Element\n  * @method createEl\n  */",
        "meta": {
            "range": [
                139,
                463
            ],
            "filename": "button.js",
            "lineno": 9,
            "path": "/Users/mboles/git/BCL-LearningSamples/jsdoc-tests2",
            "code": {}
        },
        "description": "<p>Create the component's DOM element</p>\n<pre class=\"prettyprint source\"><code>//This is test code\nvar myPlayer = this;</code></pre>",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "<p>Element's node type. e.g. 'div'</p>",
                "name": "type"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "<p>An object of element attributes that should be set on the element Tag name</p>",
                "name": "props"
            }
        ],
        "returns": [
            {
                "description": "<p>HTML Element</p>"
            }
        ],
        "kind": "function",
        "name": "createEl",
        "longname": "createEl",
        "scope": "global"
    },
    {
        "comment": "/**\n  * Allows sub components to stack CSS class names\n  * @return {String}\n  * @method buildCSSClass\n  */",
        "meta": {
            "range": [
                465,
                571
            ],
            "filename": "button.js",
            "lineno": 21,
            "path": "/Users/mboles/git/BCL-LearningSamples/jsdoc-tests2",
            "code": {}
        },
        "description": "<p>Allows sub components to stack CSS class names</p>",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "kind": "function",
        "name": "buildCSSClass",
        "longname": "buildCSSClass",
        "scope": "global"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Users/mboles/git/BCL-LearningSamples/jsdoc-tests2/button.js"
        ]
    }
]
